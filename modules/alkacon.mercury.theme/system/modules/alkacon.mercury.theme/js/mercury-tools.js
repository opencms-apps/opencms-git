"use strict";(self.webpackChunkmercury_template=self.webpackChunkmercury_template||[]).push([[471],{592:function(e,a,t){var n,r;function o(e,a,t){return e.split("$("+a+")").join(t)}function l(e){try{(e=e.substr(1)).length<6&&(e+=e);var a=(299*parseInt(e.substr(0,2),16)+587*parseInt(e.substr(2,2),16)+114*parseInt(e.substr(4,2),16))/1e3;return r&&console.info("getContrastBg(#"+e+") result: "+a),a>=220?"box box-grey":"box box-white"}catch(e){return"p-20"}}function i(e,a){n=e,(r=a)&&console.info("CssSampler.initCssSampler()");var t=n(".template-info.sample");r&&console.info("CssSampler.initCssSampler() .template-info.sample elements found: "+t.length);for(var i=0;i<t.length;i++){var s=n(t[i]),f=s.html();s.empty(),r&&console.info("CssSampler.initCssSampler() Creating CSS sample for id: "+s.attr("id"));for(var c=Mercury.getCssJsonData(s.attr("id")),u=c.length-1;u>=0;u--){var p=c[u];if(p.name){var m=f;m=o(m,"name",p.name),m=o(m,"value",p.value),m=o(m,"background",l(p.value)),s.append(n(m))}}}}t.r(a),t.d(a,{initCssSampler:function(){return i}})},528:function(e,a,t){var n,r,o,l;function i(){var e=Mercury.windowScrollTop();l.each((function(){var a=n(this);if("none"!=a.css("background-image")){var t=0,r=a.offset().top,l=a.outerHeight(!0),i=r+l,s=r-e,f=i-e,c=Mercury.windowHeight(),u=a.data("parallax").effect;if(!(l<=1||f<0||s>c)){if(o&&console.info("Parallax elementTop: "+r+" elementBottom: "+i),o&&console.info("Parallax elementScrollTop: "+s+" elementScrollBottom: "+f),1==u){var p=0;(p=l<=c?f-c:s)>0&&(t=Math.round(.5*Math.abs(p)),o&&console.info("Parallax elementHeight: "+l+" windowHeight: "+c+" offset: "+t+" elementScrollTop: "+s))}else 2==u?s<0&&(t=Math.round(2*s)):3==u&&(t=Math.round(.33*s));a.css("background-position","50% "+t+"px")}}}))}function s(e,a,t){n=e,r=a,o=t,l=e(".effect-parallax-bg"),r&&(console.info("Parallax.init()"),console.info("Parallax.init() .effect-parallax-bg elements found: "+l.length)),l.length>0&&(l.each((function(){var e=n(this),a=1;void 0!==e.data("parallax")&&void 0!==e.data("parallax").effect&&(a=e.data("parallax").effect),e.data("parallax",{effect:a})})),n(window).on("scroll",i).resize(i),i())}t.r(a),t.d(a,{initParallax:function(){return s}})}}]);
//# sourceMappingURL=mercury-tools.js.map