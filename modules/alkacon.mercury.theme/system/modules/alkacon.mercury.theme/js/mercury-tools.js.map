{"version":3,"file":"mercury-tools.js","mappings":"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","sources":["webpack://mercury-template/./template-src/js/csssampler.js","webpack://mercury-template/./template-src/js/parallax.js"],"sourcesContent":["/*\n * This program is part of the OpenCms Mercury Template.\n *\n * Copyright (c) Alkacon Software GmbH & Co. KG (http://www.alkacon.com)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n// the global objects that must be passed to this module\nvar jQ;\nvar DEBUG;\n\n\"use strict\";\n\nfunction replaceAll(template, key, value) {\n\n    return template.split(\"$(\" + key + \")\").join(value);\n}\n\nfunction getContrastBg(hexcolor){\n\n        try {\n            hexcolor = hexcolor.substr(1);\n            if (hexcolor.length < 6) {\n                hexcolor = hexcolor + hexcolor;\n            }\n            var r = parseInt(hexcolor.substr(0,2),16);\n            var g = parseInt(hexcolor.substr(2,2),16);\n            var b = parseInt(hexcolor.substr(4,2),16);\n            var yiq = ((r*299)+(g*587)+(b*114))/1000;\n            if (DEBUG) console.info(\"getContrastBg(#\" + hexcolor + \") result: \" + yiq);\n            return (yiq >= 220) ? 'box box-grey' : 'box box-white';\n        } catch (e) {\n            return 'p-20';\n        }\n}\n\n/****** Exported functions ******/\n\nexport function initCssSampler(jQuery, debug) {\n\n    jQ = jQuery;\n    DEBUG = debug;\n\n    if (DEBUG) console.info(\"CssSampler.initCssSampler()\");\n\n    var $sampleElements = jQ(\".template-info.sample\");\n    if (DEBUG) console.info(\"CssSampler.initCssSampler() .template-info.sample elements found: \" + $sampleElements.length);\n\n    for (var i = 0; i < $sampleElements.length; i++) {\n        var $element = jQ($sampleElements[i]);\n        var template = $element.html();\n        $element.empty();\n\n        if (DEBUG) console.info(\"CssSampler.initCssSampler() Creating CSS sample for id: \" + $element.attr('id'));\n        var data = Mercury.getCssJsonData($element.attr('id'));\n\n        for (var j = data.length-1; j>=0; j--) {\n\n            var obj = data[j];\n            if (obj.name) {\n                var html = template;\n                html = replaceAll(html, \"name\", obj.name);\n                html = replaceAll(html, \"value\", obj.value);\n                html = replaceAll(html, \"background\", getContrastBg(obj.value));\n                $element.append(jQ(html));\n            }\n        }\n    }\n}\n\n","/*\n * This program is part of the OpenCms Mercury Template.\n *\n * Copyright (c) Alkacon Software GmbH & Co. KG (http://www.alkacon.com)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n// the global objects that must be passed to this module\nvar jQ;\nvar DEBUG;\nvar VERBOSE;\n\n\"use strict\";\n\nvar m_$parallaxElements;\n\n// function to be called whenever the window is scrolled or resized\nfunction update(){\n    var scrollTop = Mercury.windowScrollTop();\n\n    m_$parallaxElements.each(function(){\n        var $element = jQ(this);\n\n        var backgroundImage = $element.css(\"background-image\");\n        if (backgroundImage == 'none') {\n            return;\n        }\n\n        var offset = 0;\n        var elementTop = $element.offset().top;\n        var elementHeight = $element.outerHeight(true);\n        var elementBottom = elementTop + elementHeight;\n        var elementScrollTop = elementTop - scrollTop;\n        var elementScrollBottom = elementBottom - scrollTop;\n        var windowHeight = Mercury.windowHeight();\n\n        var effectType = $element.data(\"parallax\").effect;\n\n        // Check if element is to small for parallax effect\n        if (elementHeight <= 1) {\n            return;\n        }\n\n        // Check if element is visible, if not just return\n        if (elementScrollBottom < 0 || elementScrollTop > windowHeight) {\n            return;\n        }\n\n        if (VERBOSE) console.info(\"Parallax elementTop: \" + elementTop + \" elementBottom: \" + elementBottom);\n        if (VERBOSE) console.info(\"Parallax elementScrollTop: \" + elementScrollTop + \" elementScrollBottom: \" + elementScrollBottom);\n\n        if (effectType == 1) {\n            // This effect assumes there is a full size background image.\n            // The background is slightly shifted up while the bottom of the\n            // element is not in view. Once the bottom is in view,\n            // or the screen top is reached, the shift effect stops.\n            var elementBottomOffset = 0;\n\n            if (elementHeight <= windowHeight) {\n                elementBottomOffset = elementScrollBottom - windowHeight;\n            } else {\n                elementBottomOffset = elementScrollTop;\n            }\n\n            if (elementBottomOffset > 0) {\n                // The bottom is not in view\n                offset = Math.round(Math.abs(elementBottomOffset) * 0.5);\n\n                if (VERBOSE) console.info(\n                    \"Parallax elementHeight: \" +  elementHeight +\n                    \" windowHeight: \" + windowHeight +\n                    \" offset: \" + offset +\n                    \" elementScrollTop: \" + elementScrollTop);\n\n            }\n        } else if (effectType == 2) {\n            // Initially developed for the blog visual.\n            // This effect assumes there is a full size background image\n            // near the screen top (directly under the main navigation).\n            // The image should have standard 'photo' 4:3 or 3:2 format.\n            // Initially only the upper part of the image is seen (about 400px).\n            // When scolling, the image starts shiftig up faster then the scroll\n            // and reveals the lower part originally hidden.\n\n            if (elementScrollTop < 0) {\n                 offset = Math.round(elementScrollTop * 2);\n            }\n        } else if (effectType == 3) {\n            // Also developed for the blog visual.\n            // This effect assumes there is a full size background image\n            // near the screen top (directly under the main navigation).\n            // The image should have standard 'photo' 4:3 or 3:2 format.\n            // When scolling, the image starts shiftig very slow\n            // and reveals some of the lower part originally hidden.\n\n            offset = Math.round(elementScrollTop * 0.33);\n        }\n        $element.css('background-position', \"50% \" + offset + \"px\");\n    });\n}\n\nfunction initParallaxInt() {\n\n    // initialize parallax sections with values from data attributes\n    m_$parallaxElements.each(function(){\n\n        var $element = jQ(this);\n        var effectType = 1;\n\n        // the following data attribute can to be attached to the div\n        // <div class=\"effect-parallax-bg\" data-prallax='{\"effect\":1}' >\n        if (typeof $element.data(\"parallax\") != 'undefined') {\n            if (typeof $element.data(\"parallax\").effect != 'undefined') {\n                effectType = $element.data(\"parallax\").effect;\n            }\n        }\n        $element.data(\"parallax\", { effect: effectType } );\n    });\n}\n\n/****** Exported functions ******/\n\nexport function initParallax(jQuery, debug, verbose) {\n\n    jQ = jQuery;\n    DEBUG = debug;\n    VERBOSE = verbose;\n\n    m_$parallaxElements = jQuery('.effect-parallax-bg');\n    if (DEBUG) {\n        console.info(\"Parallax.init()\");\n        console.info(\"Parallax.init() .effect-parallax-bg elements found: \" + m_$parallaxElements.length);\n    }\n\n    if (m_$parallaxElements.length > 0) {\n        initParallaxInt();\n        jQ(window).on('scroll', update).resize(update);\n        update();\n    }\n}\n"],"names":["jQ","DEBUG","replaceAll","template","key","value","split","join","getContrastBg","hexcolor","substr","length","yiq","parseInt","console","info","e","initCssSampler","jQuery","debug","$sampleElements","i","$element","html","empty","attr","data","Mercury","getCssJsonData","j","obj","name","append","VERBOSE","m_$parallaxElements","update","scrollTop","windowScrollTop","each","this","css","offset","elementTop","top","elementHeight","outerHeight","elementBottom","elementScrollTop","elementScrollBottom","windowHeight","effectType","effect","elementBottomOffset","Math","round","abs","initParallax","verbose","window","on","resize"],"sourceRoot":""}