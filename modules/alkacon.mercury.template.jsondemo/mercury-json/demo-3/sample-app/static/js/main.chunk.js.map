{"version":3,"sources":["demo/exception.js","demo/footer.js","demo/header.js","section.js","index.js"],"names":["DemoException","props","className","React","Component","DemoFooter","view","state","href","target","DemoHeader","title","this","Section","demo3","content","settings","pieceLayout","sectionTitle","renderTitle","sectionText","renderText","sectionLink","renderLink","fullWidthImage","pieceImage","renderImage","pieceText","showPieceImage","showPieceText","image","localeContent","Image","showImage","imageTitle","Title","imageLink","link","imageSrc","SERVER_IMAGE","classFull","src","alt","Link","showLink","linkUri","URI","linkText","Text","text","showText","dangerouslySetInnerHTML","__html","hsize","visualOption","show","linkOption","showTitle","textOption","Demo3","contextPath","document","getElementById","dataset","SERVER","process","ENDPOINT","PARAMS","available","page","jsonApiAvailable","self","fetch","then","result","ok","setState","loadPage","type","locale","catch","error","url","response","json","containers","visitContainers","attributes","container","elements","visitElements","map","visitContainer","element","formatterKey","path","linkedContents","length","endsWith","renderContent","idx","visitElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.c40f8bf4.chunk.js","sourcesContent":["import React from 'react';\n\nclass DemoException extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <>\n        <section className=\"detail\">\n          <h3>You are almost there!</h3>\n          <div className=\"alert-info\">You do not see any contents here, since you did not yet activate the JSON API.</div>\n        </section>\n        <div className=\"activation\">\n          <p>Activate the JSON API in the following way:</p>\n          <ol>\n            <li>Go to the Tomcat webapps directory where the OpenCms configuration files live, e.g., in <code>[TOMCAT_HOME]/webapps/[OPENCMS]/WEB-INF/config/</code>.</li>\n            <li>Open the <code>opencms-system.xml</code> configuration file with your favorite text editor.</li>\n            <li>Add the <code>org.opencms.xml.xml2json.CmsJsonResourceHandler</code> class at the end of the list of resource init handlers:\n            <pre>{`[...]\n<resourceinit>\n  [...]\n  <resourceinithandler class=\"org.opencms.xml.xml2json.CmsJsonResourceHandler\" />\n</resourceinit>\n[...]`}</pre>\n            </li>\n            <li>Restart Tomcat.</li>\n          </ol>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default DemoException;\n","import React from 'react';\n\nclass DemoFooter extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.view = props.view;\n    this.state = props.state;\n  }\n\n  render() {\n    return (\n      <footer>\n        <div>\n          <h4>Demo using the OpenCms JSON API.</h4>\n          <div className=\"flex column\">\n            <a href=\"https://documentation.opencms.org/opencms-documentation/more-opencms-features/headless-json-api/\"\n               target=\"_blank\"\n               className=\"doc\">Read the API Documentation</a>\n            <a href=\"https://github.com/alkacon/mercury-json\"\n               target=\"_blank\"\n               className=\"github\">View the Demo Source on GitHub</a>\n          </div>\n        </div>\n      </footer>\n    )\n  }\n}\n\nexport default DemoFooter;\n","import React from 'react';\n\nclass DemoHeader extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.title = props.title;\n  }\n\n  render() {\n    return (\n      <header>\n        <h1>{this.title}</h1>\n        <h4>\n          <span>A demo single page application using </span>\n          <a href=\"#\">OpenCms</a>.\n        </h4>\n      </header>\n    )\n  }\n}\n\nexport default DemoHeader;\n","import React from 'react';\n\n/**\n * Class representing a section component.\n */\nclass Section extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    /** The demo 3 application. */\n    this.demo3 = props.demo3;\n    /** The content to render. */\n    this.content = props.content;\n    /** The formatter settings. */\n    this.settings = props.settings;\n  }\n\n  /**\n   * Renders this component according to formatter settings.\n   */\n  render() {\n    const pieceLayout = this.settings.pieceLayout;\n    const sectionTitle = this.renderTitle();\n    const sectionText = this.renderText();\n    const sectionLink = this.renderLink();\n    const fullWidthImage = !(sectionTitle && sectionText && sectionLink);\n    const pieceImage = this.renderImage(fullWidthImage);\n    const pieceText = (\n      <div>\n      {sectionTitle}\n      {sectionText}\n      {sectionLink}\n      </div>\n    )\n    if (pieceLayout === '6') { // image left, text right\n      return (\n        <div className=\"list\">\n        {this.showPieceImage() ? pieceImage : false}\n        {this.showPieceText() ? pieceText : false}\n        </div>\n      )\n    } else if (pieceLayout === '7') { // text left, image right\n      return (\n        <div className=\"list\">\n        {this.showPieceText() ? pieceText : false}\n        {this.showPieceImage() ? pieceImage : false}\n        </div>\n      )\n    }\n    return (\n      <div>Unknown pieceLayout setting: {pieceLayout}.</div>\n    )\n  }\n\n  /**\n   * Renders the image of this section.\n   */\n  renderImage(fullWidthImage) {\n    const image = this.content.localeContent.Image;\n    if (this.showImage() && image) {\n      const imageTitle = image.Title;\n      const imageLink = image.Image.link;\n      const imageSrc = this.demo3.SERVER_IMAGE + imageLink;\n      const classFull = fullWidthImage ? 'full' : null;\n      return (\n        <img src={imageSrc} alt={imageTitle} className={classFull}/>\n      )\n    }\n    return false;\n  }\n\n  /**\n   * Renders the link of this section.\n   */\n  renderLink() {\n    const link = this.content.localeContent.Link;\n    if (this.showLink() && link) {\n      const linkUri = '#' + link.URI.link;\n      const linkText = link.Text;\n      return (\n        <a href={linkUri}>{linkText}</a>\n      )\n    }\n    return false;\n  }\n\n  /**\n   * Renders the text of this section.\n   */\n  renderText() {\n    const text = this.content.localeContent.Text;\n    if (this.showText()) {\n      return (\n        <div dangerouslySetInnerHTML={{__html: text}}></div>\n      )\n    }\n    return false;\n  }\n\n  /**\n   * Renders the title of this section.\n   */\n  renderTitle() {\n    const title = this.content.localeContent.Title;\n    const hsize = this.settings.hsize;\n    if (hsize === '1') {\n      return (\n        <h1>{title}</h1>\n      )\n    } else if (hsize === '2') {\n      return (\n        <h2>{title}</h2>\n      )\n    } else if (hsize === '3') {\n      return (\n        <h3>{title}</h3>\n      )\n    } else if (hsize === '4') {\n      return (\n        <h4>{title}</h4>\n      )\n    } else if (hsize === '0') {\n      return false;\n    }\n    return (\n      <h2>Title</h2>\n    )\n  }\n\n  /**\n   * Whether to show the image of this section according to the settings.\n   */\n  showImage() {\n    const visualOption = this.settings.visualOption;\n    let show = true;\n    if (visualOption === '99') {\n      show = true;\n    } else if (visualOption === '0') {\n      show = false;\n    }\n    return show;\n  }\n\n  /**\n   * Whether to show the link of this section according to the settings.\n   */\n  showLink() {\n    const linkOption = this.settings.linkOption;\n    let show = true;\n    if (linkOption === 'button') {\n      show = true;\n    } else if (linkOption === 'none') {\n      show = false;\n    }\n    return show;\n  }\n\n  /**\n   * Whether to show the image piece of this section. Same as showImage().\n   */\n  showPieceImage() {\n    return this.showImage();\n  }\n\n  /**\n   * Whether to show the text piece of this section. True\n   * if either the text, the title, or the link is shown.\n   */\n  showPieceText() {\n    return this.showLink() || this.showText() || this.showTitle();\n  }\n\n  /**\n   * Whether to show the text of this section according to the settings.\n   */\n  showText() {\n    const textOption = this.settings.textOption;\n    let show = true;\n    if (textOption === 'default') {\n      show = true;\n    } else if (textOption === 'none') {\n      show = false;\n    }\n    return show;\n  }\n\n  /**\n   * Whether to show the title of this section according to the settings.\n   */\n  showTitle() {\n    const hsize = this.settings.hsize;\n    return hsize !== '0';\n  }\n}\n\nexport default Section;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DemoException from './demo/exception';\nimport DemoFooter from './demo/footer';\nimport DemoHeader from './demo/header';\nimport Section from './section'\nimport './index.css';\n\n/**\n * Class representing the demo 3 component.\n */\nclass Demo3 extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    const contextPath = document.getElementById('root').dataset.contextPath;\n    /** The server URL with context path. */\n    this.SERVER = contextPath === '${pageContext.request.contextPath}' ?\n        process.env.REACT_APP_OPENCMS_SERVER : contextPath;\n    /** The server URL without context path useful to link images. */\n    this.SERVER_IMAGE = process.env.REACT_APP_OPENCMS_SERVER_IMAGE;\n    /** The JSON endpoint. */\n    this.ENDPOINT = this.SERVER + '/json';\n    /** The URI of the page we will render. */\n    this.URI = '/sites/default/mercury-json/demo-3/page-editor/index.html';\n    /** The request parameters. */\n    this.PARAMS = '?content&wrapper&locale=en&fallbackLocale';\n    /** The state of this component. */\n    this.state = {\n      available: null,\n      page: null\n    }\n  }\n\n  /**\n   * Handler. Called when this component did mount.\n   */\n  componentDidMount() {\n    this.jsonApiAvailable();\n  }\n\n  /**\n   * Checks whether the JSON API is available.\n   */\n  jsonApiAvailable() {\n    const self = this;\n    fetch(this.ENDPOINT).then((result) => {\n      if (result.ok) {\n        self.setState({\n          available: true,\n          page: self.state.page\n        });\n        this.loadPage();\n      } else {\n        self.setState({\n          available: false,\n          type: self.state.type,\n          content: self.state.content,\n          result: self.state.result,\n          locale: self.state.locale\n        });\n      }\n    }).catch((error) => {\n      self.setState({\n        available: false,\n        page: self.state.page\n      });\n    });\n  }\n\n  /**\n   * Loads the page.\n   */\n  loadPage() {\n    const self = this;\n    const url = this.ENDPOINT + this.URI + this.PARAMS;\n    fetch(url)\n      .then(response => response.json())\n      .then((page) => {\n        self.setState({\n          available: self.state.available,\n          page: page\n        });\n      });\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    let view;\n    if (this.state.available === null) {\n      view = (<div>Loading...</div>);\n    } else if (this.state.available === false) {\n      view = (<DemoException />);\n    } else if (!this.state.page) {\n      view = (<div>Loading...</div>);\n    } else {\n      const containers = this.state.page.containers;\n      view = this.visitContainers(containers);\n    }\n    return (\n      <main>\n        <div className=\"container\">\n          <DemoHeader title=\"Demo 3\"/>\n          {view}\n          <DemoFooter />\n        </div>\n      </main>\n    )\n  }\n\n  /**\n   * Renders a content.\n   */\n  renderContent(content, settings) {\n    const type = content.attributes.type;\n    if (type === 'm-section') {\n      return (\n        <Section demo3={this} content={content} settings={settings}/>\n      )\n    } else {\n      return (\n        <div>Content type {type} is not supported.</div>\n      )\n    }\n  }\n\n  /**\n   * Visits a container.\n   */\n  visitContainer(container) {\n    const elements = container.elements;\n    return this.visitElements(elements);\n  }\n\n  /**\n   * Visit all containers of a page or an element.\n   */\n  visitContainers(containers) {\n    const self = this;\n    const html = containers.map(container => {\n      return self.visitContainer(container);\n    });\n    return html;\n  }\n\n  /**\n   * Visits an element. If the element has containers, visit them.\n   * If the element has no containers, render the content.\n   */\n  visitElement(element) {\n    const containers = element.containers;\n    const formatterKey = element.formatterKey;\n    const path = element.path;\n    const content = this.state.page.linkedContents[path];\n    const settings = element.settings;\n    if (containers.length) {\n      return this.visitContainers(containers);\n    } else if (formatterKey && formatterKey.endsWith('/json')) {\n      return this.renderContent(content, settings);\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Visit all elements of a container.\n   */\n  visitElements(elements) {\n    const self = this;\n    const html = elements.map((element, idx) => {\n      return self.visitElement(element);\n    });\n    return html;\n  }\n}\n\n/**\n * Render the demo 3 application.\n */\nReactDOM.render(\n  <Demo3/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}