{"version":3,"sources":["demo/image.js","demo/paragraph.js","demo/article.js","demo/contact.js","demo/exception.js","demo/footer.js","demo/header.js","demo/faq.js","index.js"],"names":["Image","props","demo","content","alt","this","SERVER_IMAGE","link","src","imageUrl","React","Component","Paragraph","Caption","Text","Title","caption","image","title","dangerouslySetInnerHTML","__html","text","Article","mode","handleClickDetail","bind","localeContent","Author","path","Intro","self","map","paragraph","idx","loadContentDetail","renderPreview","renderDefault","className","author","intro","paragraphs","imageAlt","href","onClick","e","file","Contact","contact","Email","name","Name","FirstName","kind","Kind","LastName","address","AddressChoice","Address","poiLink","PoiLink","Locality","locality","linkedContents","Mobile","Organization","Phone","Position","PostalCode","postalCode","StreetAddress","streetAddress","personContact","email","mobile","firstName","lastName","position","organization","phone","DemoException","DemoFooter","view","state","target","DemoHeader","FAQ","Question","question","Demo2Content","handleClickList","demo2","event","preventDefault","loadList","sort","rows","component","properties","type","attributes","Demo2List","handleClickContent","handleShowMore","loadContent","loadListMore","list","itemList","item","key","pageInfo","moreResults","listInfo","numFound","disabled","Demo2SelectSort","handleChange","value","checked","onChange","Demo2","contextPath","document","getElementById","dataset","SERVER","process","ENDPOINT","LIST","PARAMS","available","jsonApiAvailable","fetch","then","result","ok","setState","locale","catch","error","contentUrl","response","json","listUrl","SortOrder","ReactDOM","render"],"mappings":"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","file":"static/js/main.3b1b11c6.chunk.js","sourcesContent":["import React from 'react';\n\n/**\n * Class representing an image content. Image is a nested content\n * used by higher-order contents or by other nested contents such as Paragraph.\n * @see {@link http://localhost/system/modules/alkacon.mercury.template/schemas/nested/image.xsd}\n */\nclass Image extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.demo = props.demo;\n    this.content = props.content;\n    this.alt = props.alt;\n  }\n\n  /**\n   * Returns the URL of this image.\n   */\n  get imageUrl() {\n    return this.demo.SERVER_IMAGE + this.content.Image.link;\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    if (!this.content) {\n      return false;\n    }\n    return (\n      <img src={this.imageUrl} alt={this.alt}/>\n    )\n  }\n}\n\nexport default Image;\n","import React from 'react';\nimport Image from './image';\n\n/**\n * Class representing a paragraph content. Paragraph is a nested content\n * used by higher-order contents such as FAQ and article.\n * @see {@link http://localhost/system/modules/alkacon.mercury.template/schemas/nested/paragraph.xsd}\n */\nclass Paragraph extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.demo = props.demo;\n    this.content = props.content;\n  }\n\n  /**\n   * Returns the caption of this paragraph.\n   */\n  get caption() {\n    return this.content.Caption;\n  }\n\n  /**\n   * Returns the image of this paragraph.\n   */\n  get image() {\n    return this.content.Image;\n  }\n\n  /**\n   * Returns the text of this paragraph.\n   */\n  get text() {\n    return this.content.Text;\n  }\n\n  /**\n   * Returns the title of this FAQ content.\n   * For simplicity we ignore all FAQ paragraphs besides the first one.\n   */\n  get title() {\n    return this.content.Title;\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    return (\n      <div>\n        <h4>{this.caption}</h4>\n        <Image demo={this.demo} content={this.image} alt={this.title}/>\n        <div dangerouslySetInnerHTML={{__html: this.text}} />\n      </div>\n    )\n  }\n}\n\nexport default Paragraph;\n","import React from 'react';\nimport Image from './image';\nimport Paragraph from './paragraph';\n\n/**\n * Class representing an article content.\n * @see {@link http://localhost/system/modules/alkacon.mercury.template/schemas/article.xsd}\n */\nclass Article extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.demo = props.demo;\n    this.content = props.content;\n    this.mode = props.mode;\n    this.handleClickDetail = this.handleClickDetail.bind(this);\n  }\n\n  /**\n   * Returns the author of this article;\n   */\n  get author() {\n    return this.localeContent.Author;\n  }\n\n  /**\n   * Returns the content path of this article.\n   */\n  get file() {\n    return this.content.path;\n  }\n\n  /**\n   * Returns the introduction of this article.\n   */\n  get intro() {\n    return this.localeContent.Intro;\n  }\n\n  /**\n   * Returns the localized content. Depending on whether request parameter\n   * wrapper was set to true or false, the localized content is either\n   * contained in this.content.localeContent (true) or in this.content (false);\n   */\n  get localeContent() {\n    return this.content.localeContent ? this.content.localeContent :\n        this.content;\n  }\n\n  /**\n   * Returns the paragraphs of this article content.\n   */\n  get paragraphs() {\n    if (!this.localeContent.Paragraph) {\n      return false;\n    }\n    const self = this;\n    const paragraphs = this.localeContent.Paragraph.map(\n        function(paragraph, idx) {\n      return (\n        <Paragraph demo={self.demo} content={paragraph} key={idx}/>\n      )\n    });\n    return paragraphs;\n  }\n\n  /**\n   * Returns the title of this article.\n   */\n  get title() {\n    return this.localeContent.Title;\n  }\n\n  /**\n   * Handler. Called when clicking on the read more link.\n   */\n  handleClickDetail(content) {\n    this.demo.loadContentDetail(content);\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    if (this.mode === 'preview') {\n      return this.renderPreview();\n    }\n    return this.renderDefault();\n  }\n\n  /**\n   * Renders a detail view of this article.\n   */\n  renderDefault() {\n    return (\n      <section className=\"detail\">\n        <h3>{this.title}</h3>\n        <h4>by {this.author}</h4>\n        <h4>{this.intro}</h4>\n        {this.paragraphs}\n      </section>\n    );\n  }\n\n  /**\n   * Renders an article preview to be used in a list view.\n   */\n  renderPreview() {\n    const image = this.localeContent.Paragraph ?\n        this.localeContent.Paragraph[0].Image : null;\n    const imageAlt = this.title;\n    return (\n      <div className=\"list\">\n        <Image demo={this.demo} content={image} alt={imageAlt}/>\n        <div>\n          <small>m-article</small>\n          <h3>{this.title}</h3>\n          <a href=\"#\" onClick={(e) => this.handleClickDetail(this.file, e)}>Read more</a>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Article;\n","import React from 'react';\nimport Image from './image'\n\n/**\n * Class representing a contact content.\n * @see {@link http://localhost/system/modules/alkacon.mercury.template/schemas/contact.xsd}\n */\nclass Contact extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.demo = props.demo;\n    this.content = props.content;\n    this.mode = props.mode;\n    this.handleClickDetail = this.handleClickDetail.bind(this);\n  }\n\n  /**\n   * Returns the email of this contact.\n   */\n  get email() {\n    let contact = this.localeContent.Contact;\n    if (contact && contact.Email) {\n      return contact.Email.Email;\n    }\n    return false;\n  }\n\n  /**\n   * Returns the content path of this contact.\n   */\n  get file() {\n    return this.content.path;\n  }\n\n  /**\n   * Returns the first name of this contact.\n   */\n  get firstName() {\n    const name = this.localeContent.Name;\n    if (name) {\n      return name.FirstName;\n    }\n    return false;\n  }\n\n  get image() {\n    return this.localeContent.Image;\n  }\n\n  /**\n   * Returns the kind of this contact.\n   */\n  get kind() {\n    const kind = this.content.localeContent.Kind;\n    return kind ? kind : false;\n  }\n\n  /**\n   * Returns the last name of this contact.\n   */\n  get lastName() {\n    const name = this.localeContent.Name;\n    if (name) {\n      return name.LastName;\n    }\n    return false;\n  }\n\n  /**\n   * Returns the localized content. Depending on whether request parameter\n   * wrapper was set to true or false, the localized content is either\n   * contained in this.content.localeContent (true) or in this.content (false);\n   */\n  get localeContent() {\n    return this.content.localeContent ? this.content.localeContent :\n        this.content;\n  }\n\n  /**\n   * Returns the locality of this contact.\n   */\n  get locality() {\n    const contact = this.localeContent.Contact;\n    const address = contact.AddressChoice.Address;\n    const poiLink = contact.AddressChoice.PoiLink;\n    if (address) { // nested address?\n      return address.Locality;\n    } else if (poiLink) { // linked content?\n      const path = poiLink.path;\n      const linkedContent = this.content.linkedContents[path];\n      const address = linkedContent.localeContent.Address;\n      const locality = address.Locality;\n      if (locality) {\n        return locality;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns the mobile phone number of this contact.\n   */\n  get mobile() {\n    const contact = this.localeContent.Contact;\n    if (contact) {\n      return contact.Mobile;\n    }\n    return false;\n  }\n\n  /**\n   * Returns the organization name of this contact.\n   */\n  get organization() {\n    const organization = this.localeContent.Organization;\n    return organization;\n  }\n\n  /**\n   * Returns the phone of this contact.\n   */\n  get phone() {\n    const contact = this.localeContent.Contact;\n    if (contact) {\n      return contact.Phone;\n    }\n    return false;\n  }\n\n  /**\n   * Returns the position of this contact.\n   */\n  get position() {\n    const position = this.localeContent.Position;\n    return position;\n  }\n\n  /**\n   * Returns the postal code of this contact.\n   */\n  get postalCode() {\n    const contact = this.localeContent.Contact;\n    const address = contact.AddressChoice.Address;\n    const poiLink = contact.AddressChoice.PoiLink;\n    if (address) { // nested address?\n      return address.PostalCode;\n    } else if (poiLink) { // linked content?\n      const path = poiLink.path;\n      const linkedContent = this.content.linkedContents[path];\n      const address = linkedContent.localeContent.Address;\n      const postalCode = address.PostalCode;\n      if (postalCode) {\n        return postalCode;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns the street address of this contact.\n   */\n  get streetAddress() {\n    const contact = this.localeContent.Contact;\n    const address = contact.AddressChoice.Address;\n    const poiLink = contact.AddressChoice.PoiLink;\n    if (address) { // nested address?\n      return address.StreetAddress;\n    } else if (poiLink) { // linked content?\n      const path = poiLink.path;\n      const linkedContent = this.content.linkedContents[path];\n      const address = linkedContent.localeContent.Address;\n      const streetAddress = address.StreetAddress;\n      if (streetAddress) {\n        return streetAddress;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Handler. Called when clicking on the read more link.\n   */\n  handleClickDetail(content) {\n    this.demo.loadContentDetail(content);\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    if (this.mode === 'preview') {\n      return this.renderPreview();\n    } else {\n      return this.renderDefault();\n    }\n  }\n\n  /**\n   * Renders a detail view of this contact.\n   */\n  renderDefault() {\n    const personContact = this.kind === 'person' ? (\n      <>\n        <h4>Email: <a href={'email:' + this.email}>{this.email}</a></h4>\n        <h4>Mobile: {this.mobile}</h4>\n      </>\n    ) : false;\n    return (\n      <section className=\"detail\">\n        <h3>{this.firstName} {this.lastName} <small>{this.position}</small></h3>\n        <h4><strong>{this.organization}</strong></h4>\n        <h4>{this.streetAddress}</h4>\n        <h4>{this.postalCode} {this.locality}</h4>\n        <Image demo={this.demo} content={this.image}\n            alt={this.firstName + ' ' + this.lastName + ', ' + this.position}/>\n        {personContact}\n        <h4>Phone: {this.phone}</h4>\n      </section>\n    )\n\n  }\n\n  /**\n   * Renders a contact preview to be used in a list view.\n   */\n  renderPreview() {\n    const title = this.kind === 'person' ?\n        this.firstName + ' ' + this.lastName : this.organization;\n    return (\n      <div className=\"list\">\n        <Image demo={this.demo} content={this.image} alt={title}/>\n        <div>\n          <small>m-contact</small>\n          <h3>{title}</h3>\n          <a href=\"#\" onClick={(e) => this.handleClickDetail(this.file, e)}>Read more</a>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Contact;\n","import React from 'react';\n\nclass DemoException extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <>\n        <section className=\"detail\">\n          <h3>You are almost there!</h3>\n          <div className=\"alert-info\">You do not see any contents here, since you did not yet activate the JSON API.</div>\n        </section>\n        <div className=\"activation\">\n          <p>Activate the JSON API in the following way:</p>\n          <ol>\n            <li>Go to the Tomcat webapps directory where the OpenCms configuration files live, e.g., in <code>[TOMCAT_HOME]/webapps/[OPENCMS]/WEB-INF/config/</code>.</li>\n            <li>Open the <code>opencms-system.xml</code> configuration file with your favorite text editor.</li>\n            <li>Add the <code>org.opencms.xml.xml2json.CmsJsonResourceHandler</code> class at the end of the list of resource init handlers:\n            <pre>{`[...]\n<resourceinit>\n  [...]\n  <resourceinithandler class=\"org.opencms.xml.xml2json.CmsJsonResourceHandler\" />\n</resourceinit>\n[...]`}</pre>\n            </li>\n            <li>Restart Tomcat.</li>\n          </ol>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default DemoException;\n","import React from 'react';\n\nclass DemoFooter extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.view = props.view;\n    this.state = props.state;\n  }\n\n  render() {\n    return (\n      <footer>\n        <div>\n          <h4>Demo using the OpenCms JSON API.</h4>\n          <div className=\"flex column\">\n            <a href=\"https://documentation.opencms.org/opencms-documentation/more-opencms-features/headless-json-api/\"\n               target=\"_blank\"\n               className=\"doc\">Read the API Documentation</a>\n            <a href=\"https://github.com/alkacon/mercury-json\"\n               target=\"_blank\"\n               className=\"github\">View the Demo Source on GitHub</a>\n          </div>\n        </div>\n      </footer>\n    )\n  }\n}\n\nexport default DemoFooter;\n","import React from 'react';\n\nclass DemoHeader extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.title = props.title;\n  }\n\n  render() {\n    return (\n      <header>\n        <h1>{this.title}</h1>\n        <h4>\n          <span>A demo single page application using </span>\n          <a href=\"#\">OpenCms</a>.\n        </h4>\n      </header>\n    )\n  }\n}\n\nexport default DemoHeader;\n","import React from 'react';\nimport Image from './image';\nimport Paragraph from './paragraph';\n\n/**\n * Class representing a FAQ content.\n * @see {@link http://localhost/system/modules/alkacon.mercury.template/schemas/faq.xsd}\n */\nclass FAQ extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.demo = props.demo;\n    this.content = props.content;\n    this.mode = props.mode;\n    this.handleClickDetail = this.handleClickDetail.bind(this);\n  }\n\n  /**\n   * Returns the content path of this FAQ.\n   */\n  get file() {\n    return this.content.path;\n  }\n\n  /**\n   * Returns the localized content. Depending on whether request parameter\n   * wrapper was set to true or false, the localized content is either\n   * contained in this.content.localeContent (true) or in this.content (false);\n   */\n  get localeContent() {\n    return this.content.localeContent ? this.content.localeContent :\n        this.content;\n  }\n\n  /**\n   * Returns the question of this FAQ content.\n   */\n  get question() {\n    return this.localeContent.Question;\n  }\n\n  /**\n   * Returns the paragraphs of this FAQ content.\n   */\n  get paragraphs() {\n    if (!this.localeContent.Paragraph) {\n      return false;\n    }\n    const self = this;\n    const paragraphs = this.localeContent.Paragraph.map(\n        function(paragraph, idx) {\n      return (\n        <Paragraph demo={self.demo} content={paragraph} key={idx}/>\n      )\n    });\n    return paragraphs;\n  }\n\n  /**\n   * Handler. Called when clicking on the read more link.\n   */\n  handleClickDetail(content) {\n    this.demo.loadContentDetail(content);\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    if (this.mode === 'preview') {\n      return this.renderPreview();\n    } else {\n      return this.renderDefault();\n    }\n  }\n\n  /**\n   * Renders a detail view of this FAQ.\n   */\n  renderDefault() {\n    return (\n      <section className=\"detail\">\n        <h3>{this.question}</h3>\n        {this.paragraphs}\n      </section>\n    )\n  }\n\n  /**\n   * Renders a FAQ preview to be used in a list view.\n   */\n  renderPreview() {\n    const image = this.localeContent.Paragraph ?\n        this.localeContent.Paragraph[0].Image : null;\n    const imageAlt = this.question;\n    return (\n      <div className=\"list\">\n        <Image demo={this.demo} content={image} alt={imageAlt}/>\n        <div>\n          <small>m-faq</small>\n          <h3>{this.question}</h3>\n          <a href=\"#\" onClick={(e) => this.handleClickDetail(this.file, e)}>Read more</a>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default FAQ;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Article from './demo/article';\nimport Contact from './demo/contact';\nimport DemoException from './demo/exception';\nimport DemoFooter from './demo/footer';\nimport DemoHeader from './demo/header';\nimport FAQ from './demo/faq';\nimport './index.css';\n\n/**\n * Class representing the demo 2 detail view.\n */\nclass Demo2Content extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.handleClickList = this.handleClickList.bind(this);\n    this.demo2 = props.demo2;\n  }\n\n  /**\n   * Handler. Called when the back-link is clicked.\n   */\n  handleClickList(event) {\n    event.preventDefault();\n    this.demo2.loadList(this.demo2.state.sort, this.demo2.state.rows);\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    const content = this.demo2.state.content;\n    const title = content.properties.Title;\n    const type = content.attributes.type;\n    let component;\n    if (type === 'm-article') {\n      component = (<Article demo={this.demo2} content={content}/>);\n    } else if (type === 'm-contact') {\n      component = (<Contact demo={this.demo2} content={content}/>);\n    } else {\n      component = (\n        <div>\n          <h2>{title}</h2>\n          <p>Unknown detail type: {type}.</p>\n        </div>\n      )\n    }\n    return (\n      <>\n        <h3 className=\"back\">\n          <a href=\"\" onClick={this.handleClickList}>Back</a>\n        </h3>\n        {component}\n      </>\n    );\n  }\n}\n\n/**\n * Class representing the demo 2 list view.\n */\nclass Demo2List extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.handleClickContent = this.handleClickContent.bind(this);\n    this.handleShowMore = this.handleShowMore.bind(this);\n    this.demo2 = props.demo2;\n  }\n\n  /**\n   * Handler. Called when a list item is clicked.\n   */\n  handleClickContent(content) {\n    const path = content.path;\n    this.demo2.loadContent(path);\n  }\n\n  /**\n   * Handler. Called when the show more button is clicked.\n   */\n  handleShowMore(event) {\n    this.demo2.loadListMore();\n  }\n\n  /**\n   * Renders the list depending on the respective content type.\n   */\n  render() {\n    const self = this;\n    const list = this.demo2.state.list;\n    const itemList = list.list ? list.list.map(function(item, idx) {\n      const type = item.attributes.type;\n      const key = item.properties.Title + idx;\n      if (type === 'm-article') {\n        return (\n          <Article demo={self.demo2} content={item} key={key} mode=\"preview\"/>\n        )\n      } else if (type === 'm-contact') {\n        return (\n          <Contact demo={self.demo2} content={item}  key={key} mode=\"preview\"/>\n        )\n      } else if (type === 'm-faq') {\n        return (\n          <FAQ demo={self.demo2} content={item}  key={key} mode=\"preview\"/>\n        )\n      } else {\n        return (\n          <div>Unknown content type.</div>\n        )\n      }\n    }) : null;\n    let pageInfo = '';\n    let moreResults = true;\n    if (list.listInfo) {\n      let rows = this.demo2.state.rows > list.listInfo.numFound ?\n          list.listInfo.numFound : this.demo2.state.rows;\n      pageInfo += rows + '/' + list.listInfo.numFound;\n      moreResults = this.demo2.state.rows < list.listInfo.numFound;\n    }\n    return (\n      <>\n        <Demo2SelectSort demo2={this.demo2}/>\n        {itemList}\n        <div className=\"flex column\">\n          <h4>{pageInfo}</h4>\n          <button onClick={this.handleShowMore}\n                  disabled={!moreResults}>\n            <big>Show more...</big>\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\n/**\n * Class representing an interactive component for sort selection.\n */\nclass Demo2SelectSort extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.demo2 = props.demo2;\n  }\n\n  /**\n   * Handler. Called when a sort option is selected.\n   */\n  handleChange(event) {\n    this.demo2.loadList(event.target.value);\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    const sort = this.demo2.state.sort;\n    return (\n      <section className=\"select\">\n        <div>\n          <h4>Sort by</h4>\n          <label className=\"radio\">Date ascending\n            <input type=\"radio\" value=\"DATE_ASC\" name=\"sort\"\n                   checked={sort === 'DATE_ASC'}\n                   onChange={this.handleChange}/>\n            <span className=\"checkmark\"></span>\n          </label>\n          <label className=\"radio\">Date descending\n            <input type=\"radio\" name=\"sort\" value=\"DATE_DESC\"\n                   checked={sort === 'DATE_DESC'}\n                   onChange={this.handleChange}/>\n            <span className=\"checkmark\"></span>\n          </label>\n          <label className=\"radio\">Title ascending\n            <input type=\"radio\" name=\"sort\" value=\"TITLE_ASC\"\n                   checked={sort === 'TITLE_ASC'}\n                   onChange={this.handleChange}/>\n            <span className=\"checkmark\"></span>\n          </label>\n          <label className=\"radio\">Title descending\n            <input type=\"radio\" name=\"sort\" value=\"TITLE_DESC\"\n                   checked={sort === 'TITLE_DESC'}\n                   onChange={this.handleChange}/>\n            <span className=\"checkmark\"></span>\n          </label>\n          <label className=\"radio\">Order ascending\n            <input type=\"radio\" name=\"sort\" value=\"ORDER_ASC\"\n                   checked={sort === 'ORDER_ASC'}\n                   onChange={this.handleChange}/>\n            <span className=\"checkmark\"></span>\n          </label>\n          <label className=\"radio\">Order descending\n            <input type=\"radio\" name=\"sort\" value=\"ORDER_DESC\"\n                   checked={sort === 'ORDER_DESC'}\n                   onChange={this.handleChange}/>\n            <span className=\"checkmark\"></span>\n          </label>\n        </div>\n      </section>\n    )\n  }\n}\n\n/**\n * Class representing the demo 2 application.\n */\nclass Demo2 extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    const contextPath = document.getElementById('root').dataset.contextPath;\n    /** The server URL. */\n    this.SERVER = contextPath === '${pageContext.request.contextPath}' ?\n        process.env.REACT_APP_OPENCMS_SERVER : contextPath;\n    /** The server URL without context path useful to link images. */\n    this.SERVER_IMAGE = process.env.REACT_APP_OPENCMS_SERVER_IMAGE;\n    /** The API endpoint. */\n    this.ENDPOINT = this.SERVER + '/json';\n    /** The list configuration. */\n    this.LIST = '/sites/default/mercury-json/.content/list-m/list_00001.xml';\n    /** The request params. */\n    this.PARAMS = '?content&wrapper' + // request as much as possible information\n        '&locale=en&fallbackLocale'; // request one locale with fallback\n    /** The state of this component. */\n    this.state = {\n      available: null,\n      content: null,\n      list: {},\n      sort: '',\n      rows: 5\n    };\n  }\n\n  /**\n   * Load the list when the component did mount.\n   */\n  componentDidMount() {\n    this.jsonApiAvailable();\n  }\n\n  /**\n   * Checks whether the JSON API is available.\n   */\n  jsonApiAvailable() {\n    const self = this;\n    fetch(this.ENDPOINT).then((result) => {\n      if (result.ok) {\n        self.setState({\n          available: true,\n          content: self.state.content,\n          list: self.state.list,\n          sort: self.state.sort,\n          rows: self.state.rows\n        });\n        this.loadList();\n      } else {\n        self.setState({\n          available: false,\n          type: self.state.type,\n          content: self.state.content,\n          result: self.state.result,\n          locale: self.state.locale\n        });\n      }\n    }).catch((error) => {\n      self.setState({\n        available: false,\n        content: self.state.content,\n        list: self.state.list,\n        sort: self.state.sort,\n        rows: self.state.rows\n      });\n    });\n  }\n\n  /**\n   * Load a content.\n   */\n  loadContentDetail(path) {\n    const self = this;\n    const contentUrl = this.ENDPOINT + path + this.PARAMS;\n    fetch(contentUrl)\n      .then(response => response.json())\n      .then((content) => {\n        self.setState({\n          available: self.state.available,\n          content: content,\n          list: self.state.list,\n          sort: self.state.sort,\n          rows: self.state.rows\n        });\n      });\n  }\n\n  /**\n   * Loads a list, optionally for a given sort order and a given number of rows.\n   */\n  loadList(sort, rows) {\n    const self = this;\n    let listUrl = this.ENDPOINT + this.LIST + this.PARAMS;\n    if (sort) {\n      listUrl += '&sort=' + sort;\n    }\n    if (!rows) {\n      rows = 5;\n    }\n    listUrl += '&rows=' + rows;\n    fetch(listUrl)\n      .then(response => response.json())\n      .then((list) => {\n        if (!sort) {\n          sort = list.SortOrder;\n        }\n        self.setState({\n          available: self.state.available,\n          content: null,\n          list: list,\n          sort: sort,\n          rows: rows\n        })\n      });\n  }\n\n  /**\n   * Load more results.\n   */\n  loadListMore() {\n    const rows = this.state.rows + 5;\n    this.loadList(this.state.sort, rows);\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    let view;\n    if (this.state.available === null) {\n      view = (<div>Loading...</div>);\n    } else if (this.state.available === false) {\n      view = (<DemoException />);\n    } else if (this.state.content) {\n      view = (<Demo2Content demo2={this} />);\n    } else {\n      view = (<Demo2List demo2={this} />);\n    }\n    return (\n      <main>\n        <div className=\"container\">\n          <DemoHeader title=\"Demo 2\"/>\n          {view}\n          <DemoFooter />\n        </div>\n      </main>\n    )\n  }\n}\n\n/**\n * Render the demo 2 application.\n */\nReactDOM.render(\n  <Demo2 />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}